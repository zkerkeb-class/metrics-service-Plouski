# Configuration Prometheus pour microservices en Docker
global:
  scrape_interval: 15s
  evaluation_interval: 15s

# Configuration des targets à scraper - UTILISE LES NOMS DOCKER
scrape_configs:
  # Prometheus lui-même
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # ✅ CONFIGURATION DOCKER - Utilise les noms des containers
  
  # Service AI
  - job_name: 'ai-service'
    static_configs:
      - targets: ['ai-service:5003']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s

  # Service Auth
  - job_name: 'auth-service'
    static_configs:
      - targets: ['auth-service:5001']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s

  # Service Data
  - job_name: 'data-service'
    static_configs:
      - targets: ['data-service:5002']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s

  # Service Notification
  - job_name: 'notification-service'
    static_configs:
      - targets: ['notification-service:5005']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s

  # Service Paiement
  - job_name: 'paiement-service'
    static_configs:
      - targets: ['paiement-service:5004']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s

  # Service Metrics
  - job_name: 'metrics-service'
    static_configs:
      - targets: ['metrics-service:5006']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scheme: 'http'
    scrape_timeout: 10s